# Application Properties Configuration
# Description: Config file for web application. Web application implemented using Spring MVC
# Author: Shola suleiman
# Date: 29.11.2033

# tests config
greeting.message=Welcome to the highly efficient and critically acclaimed (pun not intended) Learning Management System. Brought to you by Shola the Great!
server.port=9999


# config is for spring boot actuator in order to be able to view the status and environmental variables
management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true  


# Client Registration for Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=EduAppWebApplication
spring.security.oauth2.client.registration.keycloak.client-secret=tOWRsnwaFxgWybotkHturqe2bxSCeK4V
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid

# Provider Details for Keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/auth/realms/EduApp
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://keycloak:8080/auth/realms/EduApp/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8080/auth/realms/EduApp/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://keycloak:8080/auth/realms/EduApp/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://keycloak:8080/auth/realms/EduApp/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Resource Server JWT Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/auth/realms/EduApp


# Zipkin Config
spring.zipkin.baseUrl:http://zipkin:9411
# how much infromation sleuth should send to zipkin...1==100% since my microservice logs are small
spring.sleuth.sampler.percentage: 1